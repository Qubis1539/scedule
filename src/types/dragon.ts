export type ClassRoom = {
  id: string;
  type: any[];
  status: string;
  shortId: string;
  slots: any[];
  isOffline: boolean;
  isTrial: boolean;
  isEnroll: boolean;
  isSelfEnrollEnabled: boolean;
  startA?: string;
  endA?: string;
  ageLimitRange: any[];
  course: any[];
  scheduleUpdatesCount: number;
  lessons: any[];
  students: any[];
  teachers: any[];
  accountManagers: string[];
  timeZoneOffse?: number;
  onlineConferenc: any[];
  durationMinutes: number;
  version: number;
  isArchived: boolean;
  archivedA: string;
  createdAt: string;
  updatedAt: string;
};
export type SocialLinks = {
  facebook?: string;
  vk?: string;
  telegram?: string;
  slack?: string;
  instagram?: string;
  twitter?: string;
  linkedIn?: string;
  github?: string;
  discord?: string;
  tiktok?: string;
  like?: string;
  youtube?: string;
};
export type DragonUser = {
  id: string;
  emailAddress?: string;
  phoneNumberCountryCode?: string;
  phoneNumber?: string;
  isRegistered: boolean;
  isPrivate: boolean;
  isBlocked: boolean;
  registeredAt?: string;
  shortBio?: string;
  socialLinks?: SocialLinks;
  nickname: string;
  firstName: string;
  middleName?: string;
  lastName?: string;
  fullName?: string;
  dateOfBirth?: string;
  gender: string;
  roleIds: string[];
  countryCode?: string;
  cityId?: string;
  timeZoneOffset?: number;
  settings?: Record<string, any>;
  langCodes: string[];
  version: number;
  isArchived: boolean;
  archivedAt?: string;
  createdAt: string;
  updatedAt: string;
  avatarUrl?: string;
};
export type DragonTeacher = {
  user: DragonUser;
  gradeId: string;
  availableCourseId: string[];
  calendarUrls: string[];
  employmentType: string;
};
export type DragonUserWithEmail = DragonUser & { emailAddress: string };
export type DragonClassRoomResp = {
  items: ClassRoom[];
  itemsCount: number;
  totalCount: number;
  offset: number;
};
export type DragonTeachersResp = {
  items: DragonTeacher[];
  itemsCount: number;
  totalCount: number;
  offset: number;
};
export type DragonUsersResp = {
  items: DragonUser[];
  itemsCount: number;
  totalCount: number;
  offset: number;
};
export type AuthTokens = {
  accessToken: string;
  refreshToken: string;
};
